# 4-Bit Fast Adder (Carry-Lookahead Adder)
# This circuit adds two 4-bit numbers (A and B) and a carry-in (C0)
# using carry-lookahead logic for high-speed operation.
#
# It produces a 4-bit sum (S) and a final carry-out (C4).

# --- INPUTS & OUTPUTS ---
IN A0, A1, A2, A3, B0, B1, B2, B3, C0
OUT C4, S3, S2, S1, S0;

# --- STAGE 1: GENERATE 'PROPAGATE' (P) AND 'GENERATE' (G) SIGNALS ---
# For each bit i, Pi = Ai XOR Bi and Gi = Ai AND Bi

# Bit 0
NAND A0, B0, P0_n1; NAND A0, P0_n1, P0_n2; NAND B0, P0_n1, P0_n3; NAND P0_n2, P0_n3, P0;
NAND A0, B0, G0_n1; NOT G0_n1, G0;

# Bit 1
NAND A1, B1, P1_n1; NAND A1, P1_n1, P1_n2; NAND B1, P1_n1, P1_n3; NAND P1_n2, P1_n3, P1;
NAND A1, B1, G1_n1; NOT G1_n1, G1;

# Bit 2
NAND A2, B2, P2_n1; NAND A2, P2_n1, P2_n2; NAND B2, P2_n1, P2_n3; NAND P2_n2, P2_n3, P2;
NAND A2, B2, G2_n1; NOT G2_n1, G2;

# Bit 3
NAND A3, B3, P3_n1; NAND A3, P3_n1, P3_n2; NAND B3, P3_n1, P3_n3; NAND P3_n2, P3_n3, P3;
NAND A3, B3, G3_n1; NOT G3_n1, G3;

# --- STAGE 2: CARRY LOOKAHEAD LOGIC UNIT ---
# Calculate carries C1, C2, C3, C4 in parallel.

# C1 = G0 + P0*C0
NAND P0, C0, C1_t1_n; NOT C1_t1_n, C1_t1;
NOT G0, C1_nG0; NOT C1_t1, C1_nt1; NAND C1_nG0, C1_nt1, C1;

# C2 = G1 + P1*G0 + P1*P0*C0
NAND P1, G0, C2_t1_n; NOT C2_t1_n, C2_t1;
NAND P1, P0, C2_p1p0_n; NOT C2_p1p0_n, C2_p1p0;
NAND C2_p1p0, C0, C2_t2_n; NOT C2_t2_n, C2_t2;
NOT G1, C2_nG1; NOT C2_t1, C2_nt1; NAND C2_nG1, C2_nt1, C2_or1;
NOT C2_or1, C2_nOr1; NOT C2_t2, C2_nt2; NAND C2_nOr1, C2_nt2, C2;

# C3 = G2 + P2*G1 + P2*P1*G0 + P2*P1*P0*C0
NAND P2, G1, C3_t1_n; NOT C3_t1_n, C3_t1;
NAND P2, P1, C3_p2p1_n; NOT C3_p2p1_n, C3_p2p1;
NAND C3_p2p1, G0, C3_t2_n; NOT C3_t2_n, C3_t2;
NAND C3_p2p1, P0, C3_p2p1p0_n; NOT C3_p2p1p0_n, C3_p2p1p0;
NAND C3_p2p1p0, C0, C3_t3_n; NOT C3_t3_n, C3_t3;
NOT G2, C3_nG2; NOT C3_t1, C3_nt1; NAND C3_nG2, C3_nt1, C3_or1;
NOT C3_t2, C3_nt2; NOT C3_t3, C3_nt3; NAND C3_nt2, C3_nt3, C3_or2;
NOT C3_or1, C3_nOr1; NOT C3_or2, C3_nOr2; NAND C3_nOr1, C3_nOr2, C3;

# C4 = G3 + P3*G2 + P3*P2*G1 + P3*P2*P1*G0 + P3*P2*P1*P0*C0
NAND P3, G2, C4_t1_n; NOT C4_t1_n, C4_t1;
NAND P3, P2, C4_p3p2_n; NOT C4_p3p2_n, C4_p3p2;
NAND C4_p3p2, G1, C4_t2_n; NOT C4_t2_n, C4_t2;
NAND C4_p3p2, P1, C4_p3p2p1_n; NOT C4_p3p2p1_n, C4_p3p2p1;
NAND C4_p3p2p1, G0, C4_t3_n; NOT C4_t3_n, C4_t3;
NAND C4_p3p2p1, P0, C4_p3p2p1p0_n; NOT C4_p3p2p1p0_n, C4_p3p2p1p0;
NAND C4_p3p2p1p0, C0, C4_t4_n; NOT C4_t4_n, C4_t4;
NOT G3, C4_nG3; NOT C4_t1, C4_nt1; NAND C4_nG3, C4_nt1, C4_or1;
NOT C4_t2, C4_nt2; NOT C4_t3, C4_nt3; NAND C4_nt2, C4_nt3, C4_or2;
NOT C4_or1, C4_nOr1; NOT C4_or2, C4_nOr2; NAND C4_nOr1, C4_nOr2, C4_or12;
NOT C4_or12, C4_nOr12; NOT C4_t4, C4_nt4; NAND C4_nOr12, C4_nt4, C4;

# --- STAGE 3: FINAL SUM CALCULATION ---
# Si = Pi XOR Ci

# Sum 0
NAND P0, C0, S0_n1; NAND P0, S0_n1, S0_n2; NAND C0, S0_n1, S0_n3; NAND S0_n2, S0_n3, S0;

# Sum 1
NAND P1, C1, S1_n1; NAND P1, S1_n1, S1_n2; NAND C1, S1_n1, S1_n3; NAND S1_n2, S1_n3, S1;

# Sum 2
NAND P2, C2, S2_n1; NAND P2, S2_n1, S2_n2; NAND C2, S2_n1, S2_n3; NAND S2_n2, S2_n3, S2;

# Sum 3
NAND P3, C3, S3_n1; NAND P3, S3_n1, S3_n2; NAND C3, S3_n1, S3_n3; NAND S3_n2, S3_n3, S3;
